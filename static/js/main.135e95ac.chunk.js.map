{"version":3,"sources":["services/api.js","components/search/search.jsx","components/listing/listing.jsx","components/searchHeader/searchHeader.jsx","App.js","index.js"],"names":["axios","create","baseURL","Search","props","state","Fragment","className","onSubmit","e","searchHandler","type","onChange","handleInputValue","placeholder","Component","Listing","src","data","user","profile_image_url","alt","style","name","screen_name","created_at","text","searchHeader","havePosts","time","App","searchData","searchText","setTime","showLoader","InternetIssue","event","clearInterval","this","setState","getPostData","preventDefault","target","value","val","API","get","params","key","then","res","console","log","statuses","length","timer","catch","err","message","setInterval","refreshTimer","submitSearch","searchInputValue","map","item","index","textAlign","React","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.135e95ac.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: `https://aravindtwitter.herokuapp.com`\r\n});","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (\r\n            <React.Fragment> \r\n                {/* search */}\r\n                <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-9\">\r\n                    <form onSubmit={(e)=>this.props.searchHandler(e)}>\r\n                        <div className=\"input-group mb-3\">\r\n                            <input type=\"text\" className=\"form-control\" onChange={(e)=>this.props.handleInputValue(e)} placeholder=\"Search\" />\r\n                            <div className=\"input-group-append\">\r\n                                <button type=\"submit\" className=\"input-group-text search-btn\">Search</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                </div>\r\n                {/* /search */}\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Search;","import React from 'react';\r\n\r\nconst Listing = (props)=>{\r\n    return(\r\n        <React.Fragment>\r\n        <div className=\"row\">\r\n            <div className=\"col-lg-12 col-md-6\">\r\n                <div className=\"media p-3 card-item\">\r\n                    <img src={props.data.user.profile_image_url} alt=\"\" className=\"mr-3 rounded-circle\" style={{\"width\":\"60px\"}} />\r\n                    <div className=\"media-body\">\r\n                        <h4 className=\"post-title\">\r\n                        {props.data.user.name}\r\n                        <span className=\"user-id\">@{props.data.user.screen_name} </span>\r\n                        <small><i>{props.data.created_at}</i></small>\r\n                        </h4>\r\n                        <p>{props.data.text}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Listing;","import React from 'react';\r\n\r\nconst searchHeader = (props)=>{\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"refresh-time\">\r\n                <p>Search @ Twitter</p>\r\n                {props.havePosts && <p>Auto refresh in {props.time} seconds</p>}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default searchHeader;","import React from 'react';\nimport './App.css';\nimport './loader.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// service\nimport API from './services/api';\n\n// components\nimport Search from './components/search/search';\nimport Listing from './components/listing/listing';\nimport SearchHeader from './components/searchHeader/searchHeader';\n\n\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      searchData : [],\n      searchText: '',\n      time: 30,\n      setTime: null,\n      havePosts: false,\n      showLoader: false,\n      InternetIssue: false\n    }\n  }\n\n  // search form submit\n  submitSearch(event){\n    clearInterval(this.state.setTime);\n    if(this.state.searchText){\n      this.setState({\n        time: 30\n      })\n      this.getPostData(this.state.searchText);\n    }else{\n      this.setState({\n        searchData: [],\n        havePosts: false\n      })\n    }\n    event.preventDefault();\n  }\n\n  // set search input value to searchText\n  searchInputValue(e){\n    this.setState({\n      searchText: e.target.value\n    })\n  }\n\n  // get post data\n  getPostData(val){\n    this.setState({\n      showLoader: true,\n      havePosts: true\n    })\n    API.get('/twittersearch', {\n      params: {\n        key: val\n      }\n    }).then((res)=>{\n      console.log('res',res);\n      if(res.data.statuses.length){\n        this.setState({\n          searchData: [...res.data.statuses],\n          havePosts: true,\n          InternetIssue: false,\n          showLoader: false\n        });\n        this.timer();\n      }else{\n        this.setState({\n          searchData: [],\n          havePosts: false,\n          showLoader: false\n        })\n      }\n    }).catch((err)=>{\n      console.log(err.message);\n      if(err.message === \"Network Error\"){\n        this.setState({\n          InternetIssue: true,\n          showLoader: false,\n          havePosts: false\n        })\n      }\n    })\n  }\n\n  // execute reset timer\n  timer(){\n      this.state.setTime = setInterval(()=>this.refreshTimer(), 1000);\n  }\n\n  // refresh timer logic\n  refreshTimer(){\n    if(this.state.time >= 1){\n        this.setState({\n          time: this.state.time - 1\n        })\n    }else{\n      clearInterval(this.state.setTime);\n      this.setState({\n        time: 30\n      })\n      this.getPostData(this.state.searchText);\n    }\n  }\n\n  render(){\n    \n    const {searchData, time, havePosts, showLoader, InternetIssue} = this.state;\n    \n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <SearchHeader havePosts={havePosts} time={time} />\n          <Search searchHandler={(e)=>this.submitSearch(e)} handleInputValue={(e)=>this.searchInputValue(e)}/>\n          \n          {/* listing */}\n          {searchData.map((item, index)=>{\n            return <Listing data={item} key={index} />\n          })}\n          {/* /listing */}\n\n          {/* loader and error messages */}\n          {showLoader&&<div className=\"loader\"></div>}\n          {(!havePosts && !InternetIssue) && <h3 style={{textAlign:'center'}}>No Posts available</h3>}\n          {InternetIssue && <h4 style={{textAlign:'center'}}>Unable to fetch data due to No/Slow internet connection, Please Try Again!!!</h4>}\n          {/* /loader and error messages */}\n\n        </div> \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n)\n\n"],"sourceRoot":""}